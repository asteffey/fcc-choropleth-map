{"version":3,"sources":["hooks/useD3.js","components/ScaledD3Container.js","d3-plus/index.js","components/EducationAttainment/d3.js","components/EducationAttainment/index.js","components/App.js","serviceWorker.js","index.js"],"names":["useD3","fn","ref","useRef","useEffect","d3","current","SvgContainer","styled","div","ScaledD3Container","drawSvg","viewBox","width","height","draw","useCallback","container","svg","append","attr","dsplus","tip","legendColor","selection","prototype","appendForEach","obj","data","this","selectAll","enter","forEach","action","each","datum","index","nodes","select","attrs","node","key","chartPadding","top","right","bottom","left","toTooltipHtml","areaName","state","bachelorsOrHigherPercent","d3plus","format","appendCounties","chart","colorScale","call","nation","fips","bachelorsOrHigher","class","stroke","fill","geoPath","on","show","hide","containAndCenter","chartWidth","chartHeight","getBBox","x","y","scale","Math","min","xOffset","yOffset","appendLegend","id","transform","style","orient","shape","shapePadding","shapeHeight","shapeWidth","cells","labelFormat","d3Chart","svgWidth","svgHeight","paddedChart","Promise","all","json","then","usTopology","topojson","objects","counties","features","countyData","educationById","array","grouped","by","item","groupBy","map","topology","area_name","education","scaleSequential","extent","interpolateBlues","parse","direction","offset","getBoundingClientRect","html","createTip","catch","err","console","error","FullScreenContainer","marginTop","GlobalTemp","useDimensions","App","useFccTest","fccTest","FccTests","choropleth","queryParam","EducationAttainment","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.790099f3.chunk.js","sourcesContent":["import * as d3 from 'd3'\nimport { useRef, useEffect } from 'react'\n\nconst useD3 = (fn) => {\n  const ref = useRef()\n\n  useEffect(\n    () => fn(d3.select(ref.current)),\n    [fn]\n  )\n\n  return ref\n}\n\nexport default useD3\n","import React, { useCallback } from 'react'\nimport useD3 from '../hooks/useD3'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst SvgContainer = styled.div`\n    display: block;\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    margin: 0;\n    svg {\n        display: block;\n        width: 100%;\n        height: 100%;\n    }\n`\n\nconst ScaledD3Container = ({ drawSvg, viewBox: { width = 100, height = 100 } }) => {\n  const draw = useCallback(container => {\n    const svg = container.append('svg')\n      .attr('preserveAspectRatio', 'xMidYMid meet')\n      .attr('viewBox', `0 0 ${width} ${height}`)\n\n    drawSvg(svg, width, height)\n  }, [drawSvg, width, height])\n\n  const ref = useD3(draw)\n\n  return (\n    <SvgContainer ref={ref} />\n  )\n}\n\nScaledD3Container.propTypes = {\n  drawSvg: PropTypes.func.isRequired,\n  viewBox: PropTypes.shape({\n    width: PropTypes.number,\n    height: PropTypes.number\n  })\n}\n\nexport default ScaledD3Container\n","import * as d3 from 'd3'\nimport tip from 'd3-tip'\nimport { legendColor } from 'd3-svg-legend'\n\nconst dsplus = { ...d3, tip, legendColor }\n\ndsplus.selection.prototype.appendForEach = function (obj, data) {\n  return this.selectAll(null).data(data).enter().append(obj)\n}\n\ndsplus.selection.prototype.forEach = function (action) {\n  return this.each(function (datum, index, nodes) {\n    const selection = dsplus.select(this)\n    action(selection, datum, index, nodes)\n  })\n}\n\ndsplus.selection.prototype.attrs = function (attrs) {\n  if (typeof attrs === 'function') {\n    this.forEach((node, datum) =>\n      node.attrs(attrs(datum))\n    )\n  } else {\n    for (const key in attrs) {\n      this.attr(key, attrs[key])\n    }\n  }\n\n  return this\n}\n\nexport default dsplus\n","import d3plus from '../../d3-plus'\nimport * as topojson from 'topojson-client'\n\nexport const usTopologyUrl = 'https://cdn.freecodecamp.org/testable-projects-fcc/data/choropleth_map/counties.json'\nexport const educationUrl = 'https://cdn.freecodecamp.org/testable-projects-fcc/data/choropleth_map/for_user_education.json'\nconst chartPadding = { top: 15, right: 15, bottom: 15, left: 15 }\n\nconst d3Chart = (svg, svgWidth, svgHeight) => {\n  const { chart, width, height } = paddedChart(svg, svgWidth, svgHeight, chartPadding)\n\n  return Promise.all([\n    d3plus.json(usTopologyUrl)\n      .then(usTopology =>\n        topojson.feature(usTopology, usTopology.objects.counties).features\n      ),\n    d3plus.json(educationUrl)\n  ])\n    .then(data => parse(data, width, height))\n    .then(data => {\n      const tip = createTip(chart, data)\n      chart\n        .call(tip)\n        .call(appendCounties, data, tip)\n        .call(appendLegend, data)\n    })\n    .catch(err => console.error(err))\n}\n\nfunction paddedChart (svg, svgWidth, svgHeight, { left, top, right, bottom }) {\n  svg.append('rect').attrs({\n    id: 'background',\n    x: 0,\n    y: 0,\n    width: svgWidth,\n    height: svgHeight\n  })\n\n  return {\n    chart: svg.append('g')\n      .attr('transform', `translate(${left}, ${top})`),\n    width: svgWidth - left - right,\n    height: svgHeight - right - bottom\n  }\n}\n\nfunction parse ([countyData, educationData], width, height) {\n  const educationById = groupBy(educationData, 'fips')\n  const data = countyData.map(({ id: fips, ...topology }) => {\n    const { area_name: areaName, ...education } = educationById[fips]\n    return { fips, ...topology, areaName, ...education }\n  })\n\n  data.forEach(item => {\n    const { bachelorsOrHigher } = item\n    item.bachelorsOrHigherPercent = bachelorsOrHigher / 100\n  })\n\n  return {\n    width,\n    height,\n    data,\n    colorScale: d3plus.scaleSequential(\n      d3plus.extent(data, ({ bachelorsOrHigherPercent }) => bachelorsOrHigherPercent),\n      d3plus.interpolateBlues)\n  }\n}\n\nfunction groupBy (array, key) {\n  const grouped = {}\n  array.forEach(({ [key]: by, ...item }) => { grouped[by] = item })\n  return grouped\n}\n\nfunction createTip (chart, { width }) {\n  function svgToPixel (svgUnit) {\n    const pixelWidth = chart.node().getBoundingClientRect().width\n    return svgUnit * pixelWidth / width\n  }\n\n  return d3plus.tip()\n    .direction('n')\n    .offset([0, 10])\n    .attr('id', 'tooltip')\n    .attr('data-education', ({ bachelorsOrHigher }) => bachelorsOrHigher)\n    .style('font-size', () => `${svgToPixel(15)}px`)\n    .html(toTooltipHtml)\n}\n\nexport const toTooltipHtml = ({ areaName, state, bachelorsOrHigherPercent }) =>\n    `${areaName}, ${state}: ${d3plus.format('.0%')(bachelorsOrHigherPercent)}`\n\nfunction appendCounties (chart, { data, width, height, colorScale }, tip) {\n  chart.append('g')\n    .attr('id', 'nation')\n    .call(nation => {\n      nation.appendForEach('path', data)\n        .attrs(({ fips, bachelorsOrHigher, bachelorsOrHigherPercent }) => ({\n          class: 'county',\n          stroke: 'black',\n          fill: colorScale(bachelorsOrHigherPercent),\n          'data-fips': fips,\n          'data-education': bachelorsOrHigher\n        }))\n        .attr('d', d3plus.geoPath())\n        .on('mouseover', tip.show)\n        .on('mouseout', tip.hide)\n    })\n    .call(containAndCenter, width, height)\n}\n\nfunction containAndCenter (selection, chartWidth, chartHeight) {\n  const { x, y, width, height } = selection.node().getBBox()\n  const scale = Math.min(chartWidth / width, chartHeight / height)\n  const xOffset = (chartWidth / scale - width) / 2\n  const yOffset = (chartHeight / scale - height) / 2\n\n  selection.attr(\n    'transform',\n    // -x moves to 0 and xOffset centers\n    `scale(${scale}) translate(${(-x + xOffset)}, ${-y + yOffset})`\n  )\n}\n\nfunction appendLegend (chart, { colorScale, width, height }) {\n  const shapes = 8\n\n  chart.append('g')\n    .attrs({\n      id: 'legend',\n      transform: `translate(${width * 0.65}, ${height * 0.05})`\n    })\n    .style('font-size', '14px')\n    .call(d3plus.legendColor()\n      .orient('horizontal')\n      .shape('rect')\n      .shapePadding(0)\n      .shapeHeight(15)\n      .shapeWidth(width / 4 / shapes)\n      .cells(shapes)\n      .labelFormat(d3plus.format('.0%'))\n      .scale(colorScale)\n    )\n}\n\nexport default d3Chart\n","import React from 'react'\nimport styled from 'styled-components'\nimport ScaledD3Container from '../ScaledD3Container'\nimport d3Chart from './d3'\nimport './style.css'\nimport useDimensions from 'react-use-dimensions'\n\nconst FullScreenContainer = styled.div`\n    padding: 10px\n    height: calc(100vh - ${({ marginTop }) => `${marginTop}px`})\n`\n\nconst GlobalTemp = () => {\n  const [ref, { height }] = useDimensions()\n  return (\n    <>\n      <div ref={ref}>\n        <h1 id='title'>United States Education Attainment</h1>\n        <h3 id='description'>Percentage of adults age 25 and older with a bachelor&apos;s degree or higher (2010-2014)</h3>\n      </div>\n      <FullScreenContainer marginTop={height + 20}>\n        <ScaledD3Container drawSvg={d3Chart} viewBox={{ width: 1600, height: 900 }} />\n      </FullScreenContainer>\n    </>\n  )\n}\n\nexport default GlobalTemp\n","import React from 'react'\nimport EducationAttainment from './EducationAttainment'\nimport { useFccTest, FccTests } from '@asteffey/react-fcc-test'\n\nconst App = () => {\n  useFccTest({\n    fccTest: FccTests.choropleth,\n    queryParam: 'fcc-test'\n  })\n\n  return (\n    <EducationAttainment />\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}